// <auto-generated />
using System;
using Assingment_EFCore.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assingment_EFCore.Infrastructure.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240514163241_seedData")]
    partial class seedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4094b0a-a176-4a69-8c58-4da91822e1e8"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("6b7b3483-c21f-4a9b-adf1-b330a38dd5c1"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("29087b5a-b92d-42e3-893a-473834f5e159"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("04f3e8dd-cb05-45d8-93ef-79f0c76fb157"),
                            Name = "HR"
                        },
                        new
                        {
                            Id = new Guid("5b65bb02-649b-4146-bd5b-1f8ef0df6e40"),
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = new Guid("548950c1-ee83-4779-b33d-da9cea90f84b"),
                            Name = "Sales"
                        },
                        new
                        {
                            Id = new Guid("4ec90559-8555-4362-861b-2dc4c62c985d"),
                            Name = "Customer Service"
                        });
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f232dbad-0de4-43c3-9aa5-96c4193a4846"),
                            DepartmentId = new Guid("c4094b0a-a176-4a69-8c58-4da91822e1e8"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van A"
                        },
                        new
                        {
                            Id = new Guid("5ce93518-74c5-4327-8903-bbb36f0f4cc2"),
                            DepartmentId = new Guid("6b7b3483-c21f-4a9b-adf1-b330a38dd5c1"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van B"
                        },
                        new
                        {
                            Id = new Guid("588ff0ad-76fb-409f-9ab7-e2934427fcd1"),
                            DepartmentId = new Guid("c4094b0a-a176-4a69-8c58-4da91822e1e8"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2019, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van C"
                        },
                        new
                        {
                            Id = new Guid("b6737c5f-7ca2-4bb2-a632-4a46b50a34e5"),
                            DepartmentId = new Guid("04f3e8dd-cb05-45d8-93ef-79f0c76fb157"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van D"
                        },
                        new
                        {
                            Id = new Guid("fb587bed-3bae-4568-a4b5-ff432dc867c2"),
                            DepartmentId = new Guid("5b65bb02-649b-4146-bd5b-1f8ef0df6e40"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2017, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van E"
                        },
                        new
                        {
                            Id = new Guid("17fd1ab1-ceb2-4ac0-894f-bea653987208"),
                            DepartmentId = new Guid("548950c1-ee83-4779-b33d-da9cea90f84b"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2016, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van F"
                        },
                        new
                        {
                            Id = new Guid("8bf79edb-5e3f-4b16-b4cb-1dfbc261f918"),
                            DepartmentId = new Guid("4ec90559-8555-4362-861b-2dc4c62c985d"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van G"
                        },
                        new
                        {
                            Id = new Guid("932dab03-d560-41f7-b474-ea95aef5b70d"),
                            DepartmentId = new Guid("c4094b0a-a176-4a69-8c58-4da91822e1e8"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van H"
                        },
                        new
                        {
                            Id = new Guid("8e407c3b-ffcf-4dc9-a9cd-084140b6c876"),
                            DepartmentId = new Guid("6b7b3483-c21f-4a9b-adf1-b330a38dd5c1"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van I"
                        },
                        new
                        {
                            Id = new Guid("7ed886d3-a340-4974-bc4e-cba987c184c4"),
                            DepartmentId = new Guid("04f3e8dd-cb05-45d8-93ef-79f0c76fb157"),
                            IsDeleted = false,
                            JoinedDate = new DateTime(2012, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nguyen Van K"
                        });
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1a9f06a-1f52-4fc7-92c6-ad42370c7367"),
                            Name = "Project A"
                        },
                        new
                        {
                            Id = new Guid("140bb413-7d2b-43e2-83df-34a7e9bcb0d1"),
                            Name = "Project B"
                        },
                        new
                        {
                            Id = new Guid("432b6aeb-ffd7-436b-87be-b3c176edd0fe"),
                            Name = "Project C"
                        },
                        new
                        {
                            Id = new Guid("a1a73d40-e4d3-4385-9d5f-6384fc42806f"),
                            Name = "Project D"
                        },
                        new
                        {
                            Id = new Guid("4b310467-0dec-4042-8980-d155e01ed6a3"),
                            Name = "Project E"
                        },
                        new
                        {
                            Id = new Guid("c495897d-5c27-422c-a0ef-dadaa5de71c4"),
                            Name = "Project F"
                        });
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.ProjectEmployee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("c1a9f06a-1f52-4fc7-92c6-ad42370c7367"),
                            EmployeeId = new Guid("f232dbad-0de4-43c3-9aa5-96c4193a4846"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("140bb413-7d2b-43e2-83df-34a7e9bcb0d1"),
                            EmployeeId = new Guid("f232dbad-0de4-43c3-9aa5-96c4193a4846"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("432b6aeb-ffd7-436b-87be-b3c176edd0fe"),
                            EmployeeId = new Guid("f232dbad-0de4-43c3-9aa5-96c4193a4846"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("c1a9f06a-1f52-4fc7-92c6-ad42370c7367"),
                            EmployeeId = new Guid("5ce93518-74c5-4327-8903-bbb36f0f4cc2"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("432b6aeb-ffd7-436b-87be-b3c176edd0fe"),
                            EmployeeId = new Guid("5ce93518-74c5-4327-8903-bbb36f0f4cc2"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("c1a9f06a-1f52-4fc7-92c6-ad42370c7367"),
                            EmployeeId = new Guid("588ff0ad-76fb-409f-9ab7-e2934427fcd1"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("140bb413-7d2b-43e2-83df-34a7e9bcb0d1"),
                            EmployeeId = new Guid("588ff0ad-76fb-409f-9ab7-e2934427fcd1"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("432b6aeb-ffd7-436b-87be-b3c176edd0fe"),
                            EmployeeId = new Guid("588ff0ad-76fb-409f-9ab7-e2934427fcd1"),
                            Enable = false
                        },
                        new
                        {
                            ProjectId = new Guid("c1a9f06a-1f52-4fc7-92c6-ad42370c7367"),
                            EmployeeId = new Guid("b6737c5f-7ca2-4bb2-a632-4a46b50a34e5"),
                            Enable = false
                        });
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SalaryAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("950653cc-e8c0-46dc-947c-981e8f611401"),
                            EmployeeId = new Guid("f232dbad-0de4-43c3-9aa5-96c4193a4846"),
                            SalaryAmount = 1000m
                        },
                        new
                        {
                            Id = new Guid("76ebcf61-c29d-45d8-8a52-c95d4639e6cc"),
                            EmployeeId = new Guid("5ce93518-74c5-4327-8903-bbb36f0f4cc2"),
                            SalaryAmount = 2000m
                        },
                        new
                        {
                            Id = new Guid("2a1b051d-59ba-4cc7-ac95-90fece4627e1"),
                            EmployeeId = new Guid("588ff0ad-76fb-409f-9ab7-e2934427fcd1"),
                            SalaryAmount = 3000m
                        },
                        new
                        {
                            Id = new Guid("3fb29652-816f-4008-b9f6-941576dc4079"),
                            EmployeeId = new Guid("fb587bed-3bae-4568-a4b5-ff432dc867c2"),
                            SalaryAmount = 5000m
                        },
                        new
                        {
                            Id = new Guid("f82ef0e0-624d-4fb9-9ea8-8911badf2464"),
                            EmployeeId = new Guid("17fd1ab1-ceb2-4ac0-894f-bea653987208"),
                            SalaryAmount = 6000m
                        },
                        new
                        {
                            Id = new Guid("be1e2b7a-f132-4ee7-b0af-ed6a10bc7712"),
                            EmployeeId = new Guid("8bf79edb-5e3f-4b16-b4cb-1dfbc261f918"),
                            SalaryAmount = 7000m
                        },
                        new
                        {
                            Id = new Guid("97e3adce-adac-4580-90dc-d1269628aab9"),
                            EmployeeId = new Guid("932dab03-d560-41f7-b474-ea95aef5b70d"),
                            SalaryAmount = 8000m
                        },
                        new
                        {
                            Id = new Guid("4c749232-b2b2-49f6-9f49-ac8b25c2c608"),
                            EmployeeId = new Guid("8e407c3b-ffcf-4dc9-a9cd-084140b6c876"),
                            SalaryAmount = 9000m
                        },
                        new
                        {
                            Id = new Guid("f01b3e23-8cb4-4402-a1d8-ca47b399550e"),
                            EmployeeId = new Guid("7ed886d3-a340-4974-bc4e-cba987c184c4"),
                            SalaryAmount = 10000m
                        });
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Assingment_EFCore.Domain.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.ProjectEmployee", b =>
                {
                    b.HasOne("Assingment_EFCore.Domain.Entities.Employee", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assingment_EFCore.Domain.Entities.Project", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Salary", b =>
                {
                    b.HasOne("Assingment_EFCore.Domain.Entities.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("Assingment_EFCore.Domain.Entities.Salary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Employee", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("Assingment_EFCore.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
